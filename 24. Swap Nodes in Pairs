/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        //store the first swap.
        ListNode* temp = new ListNode(0);
        temp->next = head;
        ListNode* first = head;
        if(head !=NULL && head->next !=NULL)
        {
            first = head->next;
        }
        
        
        while(temp->next && temp->next->next)
        {
            ListNode* p1 = temp->next;
            ListNode* p2 = temp->next->next;
            
            temp->next = p2;
            p1->next = p2->next;
            p2->next = p1;
            temp = p1;
        }
        return first;
        
    }
};
